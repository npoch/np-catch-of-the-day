{"version":3,"sources":["helpers.js","components/StorePicker.js","components/NotFound.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","e","preventDefault","store","current","value","props","history","push","action","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","NotFound","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","classNames","timeout","enter","exit","name","price","onClick","subtractFromOrder","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","component","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","propType","PropTypes","func","isRequired","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","base","Rebase","createClass","database","Inventory","state","uid","owner","logout","a","auth","signOut","setState","authHandler","authData","fetch","storeName","context","post","data","user","service","authProvider","signInWithPopup","then","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","console","log","params","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","syncState","removeBinding","setItem","stringify","Router","BrowserRouter","Switch","Route","exact","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.03d704cc.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n    myInput = React.createRef();\n    goToStore = (e) => {\n        // stop form from submitting\n        e.preventDefault();\n        // get text from input\n        const store = this.myInput.current.value;\n        // change the page to /store/whatwasentered\n        this.props.history.push(`/store/${store}`);\n    }\n    render() {\n        return (\n            <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Please enter a store</h2>\n                <input \n                    type=\"text\"\n                    ref={this.myInput}\n                    required \n                    placeholder=\"Store Name\" \n                    defaultValue={getFunName()} \n                />\n                <button type=\"submit\">Visit Store ⮕</button>\n            </form>\n        \n        )\n    }\n}\n\nexport default StorePicker;","import React from 'react';\n\nconst NotFound = () => {\n    return (\n    <div>\n        <p></p>\n        <h2>AHOY, The page ye be lookin' fer is not on the map... YARR!</h2>\n    </div>\n    );\n}\n \nexport default NotFound;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ tagline }) => (\n<header className=\"top\">\n    <h1>Catch \n    <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n    </span>\n    Day</h1>\n\n    <h3 className=\"tagline\">\n        <span>{tagline}</span>\n    </h3>\n</header>\n)\n\nHeader.propTypes = { \n    tagline: PropTypes.string.isRequired\n }\n\nexport default Header;","import React, { Component } from 'react';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nclass Order extends Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        subtractFromOrder: PropTypes.func,\n        removeFromOrder: PropTypes.func\n    }\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        // ensure fish on the boat before loading orders\n        if(!fish) return null;\n        if(!isAvailable) {\n            return <CSSTransition \n            classNames=\"order\"\n            key={key}\n            timeout={{enter: 250, exit: 250}}\n            >\n                <li key={key}>\n                    Sorry {fish ? fish.name : 'fish'} is no longer available.\n                </li>\n            </CSSTransition>\n        }\n        return (\n            <CSSTransition \n            classNames=\"order\"\n            key={key}\n            timeout={{enter: 250, exit: 250}}\n            >\n                <li key={key} >\n                {count} lbs {fish.name}\n                {formatPrice(count * fish.price)}\n                <button \n                onClick={() => this.props.subtractFromOrder(key)}>\n                &minus; lbs\n                </button>\n                <button \n                onClick={() => this.props.removeFromOrder(key)}>\n                &times;\n                </button>\n                </li>\n            </CSSTransition>\n        )\n    }\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable){\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order!!!</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Order;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends Component {\n    static propTypes = {\n        addFish: PropTypes.func\n    }\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    createFish = (e) => {\n        e.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value,\n        }\n        this.props.addFish(fish);\n        //refresh form\n        e.currentTarget.reset();\n    }\n    render() { \n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n                <select name=\"status\" ref={this.statusRef} >\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n        );\n    }\n}\n \nexport default AddFishForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n            }),\n        updateFish: PropTypes.func,\n        index: PropTypes.string,\n        deleteFish: PropTypes.func,\n    }\n    handleChange = (e) => {\n        e.preventDefault();\n        // console.log(e.currentTarget.value);\n        //copy current fish\n        const updatedFish = {\n        ...this.props.fish,\n        [e.currentTarget.name]: e.currentTarget.value\n        }\n        this.props.updateFish(this.props.index, updatedFish)\n    }\n    render() { \n        return (\n            <div className=\"fish-edit\">\n                <input type='text' name='name' onChange={this.handleChange} value={this.props.fish.name} />\n                <input type='text' name='price' onChange={this.handleChange} value={this.props.fish.price} />\n                <select  name='status' onChange={this.handleChange} value={this.props.fish.status} >\n                    <option value='available'>Fresh!</option>\n                    <option value='unavailable'>Sold Out!</option>\n                </select>\n                <textarea name='desc' onChange={this.handleChange} value={this.props.fish.desc} />\n                <input type='text' name='image' onChange={this.handleChange} value={this.props.fish.image} />\n                <button \n                onClick={() => this.props.deleteFish(this.props.index)} >\n                Remove Fish\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => {\n    return (\n        <nav className=\"login\">\n            <h2>Inventory Login</h2>\n            <p>Login to manage you store's inventory.</p>\n            <button className=\"github\" onClick={() => props.authenticate('Github')}>\n                Login with Github\n            </button>\n            <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>\n                Login with Twitter\n            </button>\n        </nav>\n    );\n}\n\nLogin.propType = {\n    authenticate: PropTypes.func.isRequired\n}\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyBACUxFTx5bzeKcRof3N2h9SMsRLJZID7w\",\n    authDomain: \"np-catch-of-the-day.firebaseapp.com\",\n    databaseURL: \"https://np-catch-of-the-day-default-rtdb.firebaseio.com\",\n    projectId: \"np-catch-of-the-day\",\n    storageBucket: \"np-catch-of-the-day.appspot.com\",\n    messagingSenderId: \"796058950891\",\n    appId: \"1:796058950891:web:8ac1cd275385eaf5da32ae\",\n    measurementId: \"G-ZM3FLF506Y\"\n})\nconst base = Rebase.createClass(firebaseApp.database());\n\n//this is a names export\nexport { firebaseApp };\n\n//this is a default export\nexport default base;","import React, { Component } from 'react';\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport PropTypes from \"prop-types\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from '../base';\nimport firebase from 'firebase';\n\nclass Inventory extends Component {\n    static propTypes = {\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func,\n        fishes: PropTypes.object,\n        addFish: PropTypes.func\n    }\n    state = {\n        uid: null,\n        owner: null\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                this.authHandler({ user });\n            }\n        })\n    }\n\n    logout = async () => {\n        await firebase.auth().signOut();\n        this.setState({ uid: null })\n    }\n    authHandler = async (authData) => {\n        // console.log(authData)\n        // look up store in firebase db\n        const store = await base.fetch(this.props.storeName, { context: this});\n\n        //claim if no owner\n        if(!store.owner){\n            // claim it\n            await base.post(`${this.props.storeName}/owner`, { \n                data: authData.user.uid\n            })\n        }\n        // console.log(store)\n        //set state of inventory component to reflect currect user\n        this.setState({ \n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n    }\n    authenticate = (service) => {\n        const authProvider = new firebase.auth[`${service}AuthProvider`]();\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n    }\n    render() {\n        const logout = <button onClick={this.logout} >Log Out!</button>\n        if(!this.state.uid) {\n            return <Login authenticate={this.authenticate} />\n        }\n\n        if(this.state.uid !== this.state.owner){\n            return (\n\n            <div>\n                <p>Yarr, wrong ship matey!</p>\n                {logout}\n            </div>\n            )\n        }\n        \n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => \n                <EditFishForm \n                key={key} \n                index={key} \n                fish={this.props.fishes[key]}\n                updateFish={this.props.updateFish}\n                deleteFish={this.props.deleteFish}\n                />)}\n                <AddFishForm addFish={this.props.addFish} />\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div> \n        );\n    }\n}\n \nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from 'react';\nimport { formatPrice } from '../helpers';\nimport PropTypes from 'prop-types';\n\n\nclass Fish extends Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n            }),\n        addToOrder: PropTypes.func\n    }\n    handleClick = () => {\n        this.props.addToOrder(this.props.index);\n    }\n    render() { \n        const { image, name, price, desc, status } = this.props.details;\n        const isAvailable = status === \"available\";\n        return (\n            <li className=\"menu-fish\" >\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">{name}\n                <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button \n                disabled={!isAvailable} \n                onClick={this.handleClick}>\n                {isAvailable ? 'Add To Order' : 'Sold Out !'}\n                </button>\n            </li>\n        );\n    }\n}\n \nexport default Fish;","import React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n// import firebase from 'firebase';\nimport PropTypes from 'prop-types';\n\nclass App extends React.Component {\n    static propTypes = {\n        match: PropTypes.object\n    }\n    state = {\n        fishes: {},\n        order: {},\n    };\n    componentDidMount() {\n        const { params } = this.props.match;\n        const localStorageRef = localStorage.getItem(params.storeId);\n        \n        if(localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef)});\n        }\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n    componentDidUpdate() {\n        // console.log(this.state.order);\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n    addFish = fish => {\n        // take a copy of the existing state\n        const fishes = { ...this.state.fishes };\n\n        // add new fishes to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        \n        // set the new fishes object to state\n        this.setState({ fishes })\n    };\n    updateFish = (key, updatedFish) => {\n        //copy current state\n        const fishes = { ...this.state.fishes };\n        //update that state\n        fishes[key] = updatedFish;\n        //set that to state\n        this.setState({ fishes });\n    };\n    deleteFish = (key) => {\n        const fishes = { ...this.state.fishes};\n        fishes[key] = null;\n        this.setState({ fishes });\n    }\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n\n    };\n    addToOrder = (key) => {\n        // take a copy of state\n        const order = { ...this.state.order };\n        // either add to order or update number\n        order[key] = order[key] + 1 || 1;\n        console.log(order[key])\n        // call set state\n        this.setState({ order })\n    }\n    removeFromOrder = (key) => {\n        // take a copy of state\n        const order = { ...this.state.order };\n        // either add to order or update number\n        delete order[key];\n        // call set state\n        this.setState({ order })\n    }\n    subtractFromOrder = (key) => {\n        // take a copy of state\n        const order = { ...this.state.order };\n        // either add to order or update number\n        if(order[key] > 1) {\n            order[key] = order[key] - 1\n        } else {\n            delete order[key]\n        }\n        // call set state\n        this.setState({ order })\n    }\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\"/>\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => \n                        <Fish \n                        key={key}\n                        index={key}\n                        details={this.state.fishes[key]} \n                        addToOrder={this.addToOrder} \n                        >{key}</Fish>)}\n                    </ul>\n                </div>\n                    <Order \n                    fishes={this.state.fishes} \n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                    subtractFromOrder={this.subtractFromOrder}\n                    />\n                    <Inventory \n                    storeName={this.props.match.params.storeId}\n                    addFish={this.addFish} \n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    />\n            </div>\n        )\n    }\n}\nexport default App;","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport NotFound from \"./NotFound\";\nimport App from \"./App\";\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker} />\n            <Route path=\"/store/:storeId\" component={App} />\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n)\nexport default Router;","import React from \"react\";\nimport { render } from \"react-dom\";\nimport './css/style.css';\nimport Router from \"./components/Router\"\n\n\nrender(<Router />, document.getElementById(\"main\"));"],"sourceRoot":""}